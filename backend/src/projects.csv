,name,description,tags,link
0,yolov3,"This repo contains Ultralytics inference and training code for YOLOv3 in PyTorch. The code works on Linux, MacOS and Windows. Credit to Joseph Redmon for YOLO https://pjreddie.com/darknet/yolo/.","['deep-learning', 'yolov3', 'object-detection', 'pytorch', 'training', 'training', 'yolo', 'augmentation', 'inference', 'darknet', 'onnx', 'coremlios']",https://github.com/ultralytics/yolov3
1,MMAL-Net,"This is a PyTorch implementation of the paper Multi-branch and Multi-scale Attention Learning for Fine-Grained Visual Categorization (MMAL-Net) (Fan Zhang, Meng Li, Guisheng Zhai, Yizhao Liu). Welcome to discuss with us in issues!","['fgvc-aircraft', 'fine-grained', 'cub-200-2011', 'stanford-cars', 'fine-grained-classification', 'weakly-supervised-localization']",https://github.com/ZF1044404254/MMAL-Net
2,DeLFT,"(Deep Learning Framework for Text) is a Keras and TensorFlow framework for text processing, focusing on sequence labelling (e.g. named entity tagging, information extraction) and text classification (e.g. comment classification). This library re-implements standard state-of-the-art Deep Learning architectures relevant to text processing tasks.","['deep-learning', 'nlp', 'keras', 'ner', 'text-classification', 'sequence-labeling']",https://github.com/kermitt2/delft
3,WattMeter-for-nvidia-GPU,A simple batch file that reads from nvidia-smi file and returns the current power draw of the GPU in Watts.,"['batch-script', 'wattmeter', 'nvidia-gpu', 'nvidia-gpus', 'nvidia-smi']",https://github.com/brizinger/WattMeter-for-nvidia-GPU
4,aistore,AIStore is a lightweight object storage system with the capability to linearly scale-out with each added storage node and a special focus on petascale deep learning.,"['scale-out', 'high-performance', 'commodity-hardware', 'erasure-coding', 'map-reduce', 'object-storage deep-learning']",https://github.com/NVIDIA/aistore
5,gdrcopy,A low-latency GPU memory copy library based on NVIDIA GPUDirect RDMA technology.,"['gpu-memory', 'nvidia', 'kernel-mode-driver', 'gpudirect-rdma', 'libraries', 'linux']",https://github.com/NVIDIA/gdrcopy
6,MinkowskiEngine,"The Minkowski Engine is an auto-differentiation library for sparse tensors. It supports all standard neural network layers such as convolution, pooling, unpooling, and broadcasting operations for sparse tensors. For more information, please visit the documentation page.","['neural-network', 'computer-vision', 'sparse-tensors', 'convolutional-neural-networks', 'semantic-segmentation', 'auto-differentiation', 'spatio-temporal-analysis', 'space-timedeep-learning', 'high-dimensional-data', 'high-dimensional-inference', 'trilateral-filter', '3d-vision', 'sparse-convolution', 'pytorch', 'minkowski-engine', 'cuda', 'sparse-tensor-network']",https://github.com/NVIDIA/MinkowskiEngine
7,hpc-container-maker,HPC Container Maker (HPCCM - pronounced H-P-see-M) is an open source tool to make it easier to generate container specification files.,"['docker', 'hpc', 'containers', 'singularity']",https://github.com/NVIDIA/hpc-container-maker
8,TensorRT,"This repository contains the Open Source Software (OSS) components of NVIDIA TensorRT. Included are the sources for TensorRT plugins and parsers (Caffe and ONNX), as well as sample applications demonstrating usage and capabilities of the TensorRT platform.","['tensorrt', 'nvidia', 'deep-learning']",https://github.com/NVIDIA/TensorRT
9,ngc-container-replicator,"Clones nvcr.io using the either DGX (compute.nvidia.com) or NGC (ngc.nvidia.com) API keys. The replicator will make an offline clone of the NGC/DGX container registry. In its current form, the replicator will download every CUDA container image as well as each Deep Learning framework image in the NVIDIA project.","['nvidia-docker', 'nvidia-gpus', 'containers', 'deep-learning']",https://github.com/NVIDIA/ngc-container-replicator
10,go-tfdata,"The go-tfdata is a Go library helping to work with tar/tgz archives and files in TFRecord and tf.Example formats, including converting TAR files to TFRecord files. It provides interfaces and their default implementations on each intermediate step between tar and TFRecord format. Additionally, it includes easy to use utilities to convert and augment data in intermediate steps.","['tensorflow', 'tar', 'tfrecord', 'golang', 'tfexample', 'datapipeline']",https://github.com/NVIDIA/go-tfdata
11,pix2pixHD,Pytorch implementation of our method for high-resolution (e.g. 2048x1024) photorealistic image-to-image translation. It can be used for turning semantic label maps into photo-realistic images or synthesizing portraits from face label maps.,"['gan', 'deep-learning', 'deep-neural-networks', 'pytorch', 'pix2pix', 'image-to-image-translation', 'generative-adversarial-network', 'computer-vision', 'computer-graphics']",https://github.com/NVIDIA/pix2pixHD
12,Dataset_Synthesizer,"NDDS is a UE4 plugin from NVIDIA to empower computer vision researchers to export high-quality synthetic images with metadata. NDDS supports images, segmentation, depth, object pose, bounding box, keypoints, and custom stencils. In addition to the exporter, the plugin includes different components for generating highly randomized images. This randomization includes lighting, objects, camera position, poses, textures, and distractors, as well as camera path following, and so forth. Together, these components allow researchers to easily create randomized scenes for training deep neural networks.","['computer-vision', 'deep-learning', 'synthetic-dataset-generation', 'domain-randomization', 'pose-estimation', 'object-detection']",https://github.com/NVIDIA/Dataset_Synthesizer
13,Wetectron,Wetectron is a software system that implements state-of-the-art weakly-supervised object detection algorithms.,"['object-detection', 'pytorch', 'apex', 'computer-vision', 'deep-learning']",https://github.com/NVlabs/wetectron
14,PWC-Net: CNNs for Optical Flow Using Pyramid,"PWC-Net fuses several classic optical flow estimation techniques, including image pyramid, warping, and cost volume, in an end-to-end trainable deep neural networks for achieving state-of-the-art results.","['deeplearning', 'optical-flow', 'computer-vision', 'pytorch', 'caffe', 'cvpr', 'pwc-net']",https://github.com/NVlabs/PWC-Net
15,DG-Net,"Joint Discriminative and Generative Learning for Person Re-identification, CVPR 2019 (Oral)","['re-identification', 'person-reidentification', 'person-reid', 'image-search', 'pytorch', 'apex']",https://github.com/NVlabs/DG-Net
16,Pixel-Adaptive Convolutional Neural Networks,"Pixel-Adaptive Convolutional Neural Networks. Hang Su, Varun Jampani, Deqing Sun, Orazio Gallo, Erik Learned-Miller, and Jan Kautz. CVPR 2019.","['tensorflow', 'deep-learning', 'machine-learning', 'computer-vision', 'deep-neural-networks']",https://github.com/NVlabs/pacnet
17,Intrinsic3D,High-Quality 3D Reconstruction by Joint Appearance and Geometry Optimization with Spatially-Varying Lighting (ICCV 2017),"['tensorflow', '3d-reconstruction', 'nvidia', 'surface-reconstruction', '3d', 'computer-vision']",https://github.com/NVlabs/intrinsic3d
18,Condensa,"Condensa is a framework for programmable model compression in Python. It comes with a set of built-in compression operators which may be used to compose complex compression schemes targeting specific combinations of DNN architecture, hardware platform, and optimization objective.","['tensorflow', 'model-compression', 'model-pruning', 'deep-neural-networks']",https://github.com/NVlabs/condensa
19,MUNIT,MUNIT: Multimodal UNsupervised Image-to-image Translation,"['gan', 'deep-learning', 'image-translation', 'pytorch']",https://github.com/NVlabs/MUNIT
20,STEP,"STEP: Spatio-Temporal Progressive Learning for Video Action Detection, CVPR 2019 (Oral)","['tensorflow', 'action-detection', 'action-recognition', 'apex', 'video-understanding', 'activity-recognition']",https://github.com/NVlabs/STEP
21,Splatnet,SPLATNet: Sparse Lattice Networks for Point Cloud Processing (CVPR2018),"['deep-learning', '3d', 'point-cloud', 'cvpr2018', 'pytorch']",https://github.com/NVlabs/splatnet
22,SCOPS,SCOPS: Self-Supervised Co-Part Segmentation (CVPR 2019),"['computer-vision', 'segmentation', 'pytorch']",https://github.com/NVlabs/SCOPS
23,NVAE,NVAE is a deep hierarchical variational autoencoder that enables training SOTA likelihood-based generative models on several image datasets.,"['computer-vision', 'cuda', 'pytorch', 'autoencoder']",https://github.com/NVlabs/NVAE
24,PAMTRI,"This repo contains the official PyTorch implementation of PAMTRI: Pose-Aware Multi-Task Learning for Vehicle Re-Identification Using Highly Randomized Synthetic Data, ICCV 2019.","['computer-vision', 'cuda', 'pytorch', 'autoencoder', 're-identification', 'multi-task learning']",https://github.com/NVlabs/PAMTRI
25,tf_to_trt_image_classification,Image classification with NVIDIA TensorRT from TensorFlow models.,"['tensorflow', 'image-classification']",https://github.com/NVIDIA-AI-IOT/tf_to_trt_image_classification
